---
description: 
globs: 
alwaysApply: true
---
# AI交互记录规则【最高优先级】

## 核心原则
**记录是总结性的**：针对大量代码改动（100k+ 甚至 10m+），记录内容必须是高度总结的上下文信息，让未来的 AI 能了解做了什么、为什么做。
**所有交互都要被记录**：针对 cursor 中所有用户的交互，包括但不限于 ask/agent/manual 等模式，都需要记录到 cursor-record 中。不过不同的交互应视情况记录详略。

## 强制记录触发条件
以下情况**必须**记录：
- 技术方案选择和架构决策
- 代码修改和功能实现
- 问题解决方案和经验教训
- 重要的工具选型和配置变更

## 记录内容要求
每条记录包含核心信息：

```markdown
## [日期时间] - [简要描述]

**背景**: [用户需求概要]
**决策**: [关键技术选择及原因]
**实施**: [主要完成内容和文件变更范围]
**结果**: [对后续开发的影响]
```

## 自动阶段判断和文件映射
AI 根据交互内容自动判断记录到对应文件：
- 需求分析 → `cursor-record/requirements_analysis.md`
- 产品设计 → `cursor-record/product_design.md`  
- 技术架构 → `cursor-record/technical_architecture_design.md`
- 开发实施 → `cursor-record/development.md`
- 测试验证 → `cursor-record/testing.md`
- 部署发布 → `cursor-record/deployment.md`

## 记录质量要求
- ✅ 总结性上下文，不是详细流水账
- ✅ 重点记录"做了什么"和"为什么做" 
- ✅ 适用于大规模代码改动的高层次总结
- ❌ 避免过度详细的步骤描述
- ❌ 不记录显而易见的技术细节

## 检查机制
交互结束前快速检查：
- 是否涉及重要决策或代码修改？
- 未来的 AI 是否需要这些上下文？
- 记录是否简洁且有价值？

**成功指标**：未来的 AI 实例能通过记录快速理解项目状态和决策背景。
